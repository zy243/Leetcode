/**
 * Definition for singly-linked list.
 *public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy=new ListNode(0);
        ListNode current=dummy;
        int carry=0;

        while(l1!=null|l2!=null|carry!=0){
             // Get the current values (or 0 if node is null)
            int val1 = (l1 != null) ? l1.val : 0;
            int val2 = (l2 != null) ? l2.val : 0;

            // Compute sum and carry
            int total = val1 + val2 + carry;
            carry=total/10;
            current.next = new ListNode(total % 10);
            current=current.next;
            if (l1 != null) l1 = l1.next;//l1 move to l1.next
            if (l2 != null) l2 = l2.next;
        }
        return dummy.next;//first dummy=0
    }
    
}
